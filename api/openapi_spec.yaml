openapi: 3.0.0
info:
  title: Cinema Booking API
  description: Mock API for cinema movie listings and ticket booking
  version: 1.0.0
  contact:
    name: Cinema Lab Support
    email: lab@university.edu

servers:
  - url: http://localhost:8000/api/v1
    description: Local development server

paths:
  /movies:
    get:
      summary: Search for movies
      operationId: searchMovies
      parameters:
        - name: status
          in: query
          description: Filter by movie status
          schema:
            type: string
            enum: [now_showing, coming_soon, all]
            default: all
        - name: genre
          in: query
          description: Filter by genre
          schema:
            type: string
        - name: date
          in: query
          description: Filter by date (ISO format)
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of movies
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Movie'

  /movies/{movieId}:
    get:
      summary: Get movie details
      operationId: getMovieDetails
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Movie details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieDetail'

  /movies/{movieId}/showtimes:
    get:
      summary: Get movie showtimes
      operationId: getShowtimes
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of showtimes
          content:
            application/json:
              schema:
                type: object
                properties:
                  showtimes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Showtime'

  /showtimes/{showtimeId}/availability:
    get:
      summary: Check seat availability
      operationId: checkAvailability
      parameters:
        - name: showtimeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Seat availability information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatAvailability'

  /bookings:
    post:
      summary: Create a booking
      operationId: createBooking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponse'

  /bookings/{bookingId}/payment:
    post:
      summary: Process payment for booking
      operationId: processPayment
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'

  /recommendations:
    get:
      summary: Get movie recommendations
      operationId: getRecommendations
      parameters:
        - name: userId
          in: query
          schema:
            type: string
        - name: genres
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 5
      responses:
        '200':
          description: Movie recommendations
          content:
            application/json:
              schema:
                type: object
                properties:
                  recommendations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Movie'

components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        genre:
          type: array
          items:
            type: string
        rating:
          type: string
          enum: [G, PG, PG-13, R, NC-17]
        duration:
          type: integer
          description: Duration in minutes
        releaseDate:
          type: string
          format: date
        posterUrl:
          type: string
        status:
          type: string
          enum: [now_showing, coming_soon]

    MovieDetail:
      allOf:
        - $ref: '#/components/schemas/Movie'
        - type: object
          properties:
            synopsis:
              type: string
            director:
              type: string
            cast:
              type: array
              items:
                type: string
            imdbRating:
              type: number
              format: float
            trailerUrl:
              type: string

    Showtime:
      type: object
      properties:
        id:
          type: string
        movieId:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        theater:
          type: string
        screen:
          type: string
        price:
          type: number
          format: float
        format:
          type: string
          enum: [2D, 3D, IMAX, 4DX]

    SeatAvailability:
      type: object
      properties:
        showtimeId:
          type: string
        totalSeats:
          type: integer
        availableSeats:
          type: integer
        seatMap:
          type: array
          items:
            type: object
            properties:
              row:
                type: string
              seats:
                type: array
                items:
                  type: object
                  properties:
                    number:
                      type: string
                    status:
                      type: string
                      enum: [available, occupied, reserved]
                    type:
                      type: string
                      enum: [standard, premium, vip]

    BookingRequest:
      type: object
      required:
        - showtimeId
        - seats
        - customerInfo
      properties:
        showtimeId:
          type: string
        seats:
          type: array
          items:
            type: object
            properties:
              row:
                type: string
              number:
                type: string
        customerInfo:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            phone:
              type: string

    BookingResponse:
      type: object
      properties:
        bookingId:
          type: string
        status:
          type: string
          enum: [pending_payment, confirmed, cancelled]
        totalAmount:
          type: number
          format: float
        bookingDetails:
          $ref: '#/components/schemas/BookingRequest'
        expiresAt:
          type: string
          format: date-time

    PaymentRequest:
      type: object
      required:
        - paymentMethod
        - amount
      properties:
        paymentMethod:
          type: string
          enum: [credit_card, debit_card, paypal]
        amount:
          type: number
          format: float
        cardDetails:
          type: object
          properties:
            cardNumber:
              type: string
            cvv:
              type: string
            expiryMonth:
              type: string
            expiryYear:
              type: string

    PaymentResponse:
      type: object
      properties:
        transactionId:
          type: string
        status:
          type: string
          enum: [success, failed, pending]
        bookingId:
          type: string
        confirmationCode:
          type: string
        receipt:
          type: object
          properties:
            amount:
              type: number
              format: float
            tax:
              type: number
              format: float
            total:
              type: number
              format: float
            paymentMethod:
              type: string